name: Vulnerability Scan (On-Demand)

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: "Repo Tag and Docker image to scan"
        required: true
        default: "v1.10.1"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_API: ${{ github.repository }}-api # image name of img api
  IMAGE_NAME_RAY: ${{ github.repository }}-ray # image name of img ray

jobs:
  scan:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Log in to the Container registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Scan Dockerfile (config)
        uses: aquasecurity/trivy-action@dc5a429b52fcf669ce959baa2c2dd26090d2a6c4
        with:
          scan-type: config
          scan-ref: ./
          format: json
          output: vulnerability-config-results.json

      - name: Upload vulnerability config scan results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: vulnerability-config-scan
          path: vulnerability-config-results.json

      - name: Scan built image api (image)
        uses: aquasecurity/trivy-action@dc5a429b52fcf669ce959baa2c2dd26090d2a6c4
        with:
          scan-type: image
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_API }}:${{ github.event.inputs.image_tag }}
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          format: json
          output: vulnerability-image-api-results.json

      - name: Upload vulnerability image scan results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: vulnerability-image-api-scan
          path: vulnerability-image-api-results.json

      - name: Scan built image ray (image)
        uses: aquasecurity/trivy-action@dc5a429b52fcf669ce959baa2c2dd26090d2a6c4
        with:
          scan-type: image
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_RAY }}:${{ github.event.inputs.image_tag }}
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          format: json
          output: vulnerability-image-ray-results.json

      - name: Upload vulnerability image scan results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: vulnerability-image-scan-ray
          path: vulnerability-image-ray-results.json
